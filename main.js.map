{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/layouts/components/index.ts","webpack:///./src/app/layouts/components/sidenav-layout/sidenav-layout.component.html","webpack:///./src/app/layouts/components/sidenav-layout/sidenav-layout.component.scss","webpack:///./src/app/layouts/components/sidenav-layout/sidenav-layout.component.ts","webpack:///./src/app/layouts/dynamic-layout/dynamic-layout.component.html","webpack:///./src/app/layouts/dynamic-layout/dynamic-layout.component.ts","webpack:///./src/app/layouts/layouts.module.ts","webpack:///./src/app/layouts/layouts.service.ts","webpack:///./src/app/layouts/resolvers/index.ts","webpack:///./src/app/layouts/resolvers/main-breadcrumb-create-router-link.resolver.ts","webpack:///./src/app/layouts/resolvers/main-nav-create-router-link.resolver.ts","webpack:///./src/app/layouts/resolvers/main-nav-selected-item-to-breadcrumb.resolver.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/index.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/main-breadcrumb-data.service.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/main-breadcrumb.query.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/main-breadcrumb.resolver.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/main-breadcrumb.service.ts","webpack:///./src/app/layouts/states/main-breadcrumb.state/main-breadcrumb.store.ts","webpack:///./src/app/layouts/states/main-nav.state/index.ts","webpack:///./src/app/layouts/states/main-nav.state/main-nav-data.service.ts","webpack:///./src/app/layouts/states/main-nav.state/main-nav.query.ts","webpack:///./src/app/layouts/states/main-nav.state/main-nav.resolver.ts","webpack:///./src/app/layouts/states/main-nav.state/main-nav.service.ts","webpack:///./src/app/layouts/states/main-nav.state/main-nav.store.ts","webpack:///./src/app/pages/components/index.ts","webpack:///./src/app/pages/components/list-page/list-page.component.html","webpack:///./src/app/pages/components/list-page/list-page.component.ts","webpack:///./src/app/pages/components/not-found-page/not-found-page.component.html","webpack:///./src/app/pages/components/not-found-page/not-found-page.component.ts","webpack:///./src/app/pages/dynamic-page/dynamic-page.component.html","webpack:///./src/app/pages/dynamic-page/dynamic-page.component.ts","webpack:///./src/app/pages/pages.module.ts","webpack:///./src/app/pages/pages.service.ts","webpack:///./src/app/panels/components/form-panel/form-panel.component.html","webpack:///./src/app/panels/components/form-panel/form-panel.component.ts","webpack:///./src/app/panels/components/grid-panel/grid-panel.component.html","webpack:///./src/app/panels/components/grid-panel/grid-panel.component.ts","webpack:///./src/app/panels/components/index.ts","webpack:///./src/app/panels/dynamic-panel/dynamic-panel.component.html","webpack:///./src/app/panels/dynamic-panel/dynamic-panel.component.ts","webpack:///./src/app/panels/panels.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<dynamic-layout\\n    [options]=\\\"layout\\\"\\n    [contentRef]=\\\"contentRef\\\"></dynamic-layout>\\n<ng-template #contentRef>\\n    <router-outlet></router-outlet>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { LayoutsService } from './layouts/layouts.service';\nimport { PagesService } from './pages/pages.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-dynamic';\n  layout = environment.app.layout;\n  constructor(\n    layoutsService: LayoutsService,\n    pagesService: PagesService,\n  ) {\n    pagesService.update(environment.app.pages);\n  }\n}\n","import { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport en from '@angular/common/locales/en';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { en_US, NgZorroAntdModule, NZ_I18N } from 'ng-zorro-antd';\nimport { AppComponent } from './app.component';\nimport { LayoutsModule } from './layouts/layouts.module';\nimport { PagesModule } from './pages/pages.module';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgZorroAntdModule,\n    LayoutsModule,\n    PagesModule,\n    HttpClientModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { SidenavLayoutComponent } from './sidenav-layout/sidenav-layout.component';\n\nexport * from './sidenav-layout/sidenav-layout.component';\n\nexport const layoutComponents = [\n    SidenavLayoutComponent\n];\n","module.exports = \"<nz-layout>\\n    <nz-sider\\n        nzCollapsible\\n        [nzCollapsed]=\\\"mainNavIsCollapsed\\\"\\n        [nzTrigger]=\\\"null\\\">\\n        <div class=\\\"logo\\\"></div>\\n        <ul\\n            nz-menu\\n            [nzTheme]=\\\"mainNavTheme$ | async\\\"\\n            [nzMode]=\\\"'inline'\\\"\\n            [nzInlineCollapsed]=\\\"mainNavIsCollapsed\\\"\\n            *ngIf=\\\"mainNavItems$ | async as mainNavItems\\\">\\n            <li\\n                nz-submenu\\n                *ngFor=\\\"let parent of mainNavItems\\\">\\n                <span\\n                    title\\n                    (click)=\\\"mainNavUpdateSelectedItem(parent)\\\">\\n                    <i\\n                        [class]=\\\"parent?.icon\\\"\\n                        *ngIf=\\\"parent?.icon\\\"></i>\\n                    <span\\n                        class=\\\"nav-text\\\"\\n                        *ngIf=\\\"parent?.caption\\\">\\n                        {{parent?.caption}}\\n                    </span>\\n                </span>\\n                <ul *ngIf=\\\"parent?.children\\\">\\n                    <li\\n                        nz-menu-item\\n                        *ngFor=\\\"let item of parent.children\\\"\\n                        (click)=\\\"mainNavUpdateSelectedItem(item)\\\">\\n                        <a\\n                            *ngIf=\\\"item.routerLink\\\"\\n                            [routerLink]=\\\"item.routerLink\\\">\\n                            {{item.caption}}\\n                        </a>\\n                        <span *ngIf=\\\"!item.routerLink\\\">{{item.caption}}</span>\\n                    </li>\\n                </ul>\\n            </li>\\n        </ul>\\n    </nz-sider>\\n    <nz-layout>\\n        <nz-header style=\\\"background: #fff; padding:0;\\\">\\n            <i\\n                class=\\\"anticon trigger\\\"\\n                [class.anticon-menu-fold]=\\\"!mainNavIsCollapsed\\\"\\n                [class.anticon-menu-unfold]=\\\"mainNavIsCollapsed\\\"\\n                (click)=\\\"mainNavToggleIsCollapsed()\\\"></i>\\n        </nz-header>\\n        <nz-content style=\\\"margin:0 16px;\\\">\\n            <nz-breadcrumb\\n                style=\\\"margin:16px 0;\\\"\\n                *ngIf=\\\"mainBreadcrumbStateItems$ | async as mainBreadcrumbStateItems\\\">\\n                <nz-breadcrumb-item\\n                    *ngFor=\\\"let item of mainBreadcrumbStateItems; let index = index\\\"\\n                    (click)=\\\"mainBreadcrumbUpdateSelectedItem(item)\\\">\\n                    <a\\n                        *ngIf=\\\"item.routerLink && mainBreadcrumbStateItems.length>index+1\\\"\\n                        [routerLink]=\\\"item.routerLink\\\">\\n                        {{item.caption}}\\n                    </a>\\n                    <a *ngIf=\\\"!item.routerLink && mainBreadcrumbStateItems.length>index+1\\\">{{item.caption}}</a>\\n                    <span *ngIf=\\\"mainBreadcrumbStateItems.length===index+1\\\">{{item.caption}}</span>\\n                </nz-breadcrumb-item>\\n            </nz-breadcrumb>\\n            <div style=\\\"padding:24px; background: #fff; min-height: 360px;\\\">\\n                <ng-container *ngTemplateOutlet=\\\"contentRef\\\"></ng-container>\\n            </div>\\n        </nz-content>\\n        <nz-footer style=\\\"text-align: center;\\\">Ant Design ©2017 Implement By Angular</nz-footer>\\n    </nz-layout>\\n</nz-layout>\\n\"","module.exports = \":host ::ng-deep .trigger {\\n  font-size: 18px;\\n  line-height: 64px;\\n  padding: 0 24px;\\n  cursor: pointer;\\n  transition: color .3s; }\\n\\n:host ::ng-deep .trigger:hover {\\n  color: #1890ff; }\\n\\n:host ::ng-deep .logo {\\n  height: 32px;\\n  background: rgba(255, 255, 255, 0.2);\\n  margin: 16px; }\\n\"","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\nimport { Observable } from 'rxjs';\nimport { LayoutsService } from '../../layouts.service';\nimport { IMainBreadcrumbStateItem, MainBreadcrumbService, MainBreadcrumbUIQuery } from '../../states/main-breadcrumb.state';\nimport { IMainNavStateItem, MainNavService, MainNavUIQuery } from '../../states/main-nav.state';\nimport { ILayoutOptions } from '../../interfaces/layout-options.interface';\n\n@AutoUnsubscribe()\n@Component({\n  selector: 'sidenav-layout',\n  templateUrl: './sidenav-layout.component.html',\n  styleUrls: ['./sidenav-layout.component.scss']\n})\nexport class SidenavLayoutComponent implements OnInit, OnDestroy {\n  @Input()\n  contentRef: TemplateRef<any>;\n  @Input()\n  options: ILayoutOptions;\n  mainNavSelectedItem$: Observable<IMainNavStateItem>;\n  mainNavItems$: Observable<IMainNavStateItem[]>;\n  mainNavTheme$: Observable<string>;\n  mainNavIsCollapsed$: Observable<boolean>;\n  mainNavIsCollapsed: boolean;\n  mainBreadcrumbStateItems$: Observable<IMainBreadcrumbStateItem[]>;\n  mainBreadcrumbSelectedItem$: Observable<IMainBreadcrumbStateItem>;\n  static getType() {\n    return 'sidenav-layout';\n  }\n  constructor(\n    private mainNavUIQuery: MainNavUIQuery,\n    private mainNavService: MainNavService,\n    private mainBreadcrumbUIQuery: MainBreadcrumbUIQuery,\n    private mainBreadcrumbService: MainBreadcrumbService,\n    private layoutsService: LayoutsService\n  ) { }\n  ngOnInit() {\n    this.mainNavItems$ = this.mainNavUIQuery.select(state => state.items);\n    this.mainNavTheme$ = this.mainNavUIQuery.select(state => state.theme);\n    this.mainNavSelectedItem$ = this.mainNavUIQuery.select(state => state.selectedItem);\n    this.mainNavIsCollapsed$ = this.mainNavUIQuery.select(state => state.isCollapsed);\n    this.mainBreadcrumbStateItems$ = this.mainBreadcrumbUIQuery.select(state => state.items);\n    this.mainBreadcrumbSelectedItem$ = this.mainBreadcrumbUIQuery.select(state => state.selectedItem);\n    this.mainNavIsCollapsed$.subscribe(isCollapsed => this.mainNavIsCollapsed = isCollapsed);\n    this.layoutsService.update(\n      this.options\n    );\n    console.log(this);\n  }\n  ngOnDestroy() {\n    // AutoUnsubscribe\n  }\n  mainNavToggleIsCollapsed() {\n    this.mainNavUIQuery.selectOnce(state => state.isCollapsed).subscribe(value =>\n      this.mainNavService.updateIsCollapsed(this.options.resolvers, !value)\n    );\n  }\n  mainNavUpdateSelectedItem(item: IMainNavStateItem) {\n    this.mainNavService.updateSelectedItem(this.options.resolvers, item);\n  }\n  mainBreadcrumbUpdateSelectedItem(item: IMainBreadcrumbStateItem) {\n    this.mainBreadcrumbService.updateSelectedItem(this.options.resolvers, item);\n  }\n}\n","module.exports = \"<ng-container *ngIf=\\\"component$|async as component\\\">\\n    <ng-container *ngxComponentOutlet=\\\"component\\\">\\n        <ng-container *ngTemplateOutlet=\\\"contentRef\\\"></ng-container>\\n    </ng-container>\\n</ng-container>\\n\"","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { layoutComponents } from '../components';\nimport { ILayoutOptions } from '../interfaces/layout-options.interface';\n\n@Component({\n  selector: 'dynamic-layout',\n  templateUrl: './dynamic-layout.component.html'\n})\nexport class DynamicLayoutComponent implements OnInit {\n  @Input()\n  contentRef: TemplateRef<any>;\n  @Input()\n  options: ILayoutOptions;\n  component$: Observable<any>;\n  ngOnInit() {\n    const component = layoutComponents.filter(layoutComponent =>\n      this.options && layoutComponent.getType() === this.options.type\n    )[0];\n    if (component) {\n      this.component$ = new Observable(observer => {\n        observer.next(component);\n        observer.complete();\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NgxdModule } from '@ngxd/core';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { layoutComponents } from './components';\nimport { DynamicLayoutComponent } from './dynamic-layout/dynamic-layout.component';\nimport { layoutResolversProviders } from './resolvers';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgxdModule,\n    NgZorroAntdModule\n  ],\n  declarations: [\n    ...layoutComponents,\n    DynamicLayoutComponent\n  ],\n  exports: [\n    RouterModule,\n    NgZorroAntdModule,\n    ...layoutComponents,\n    DynamicLayoutComponent\n  ],\n  entryComponents: [\n    ...layoutComponents,\n    DynamicLayoutComponent\n  ],\n  providers: [\n    ...layoutResolversProviders\n  ]\n})\nexport class LayoutsModule { }\n","import { Injectable } from '@angular/core';\nimport { ILayoutOptions } from './interfaces/layout-options.interface';\nimport { MainBreadcrumbService } from './states/main-breadcrumb.state';\nimport { MainNavService } from './states/main-nav.state';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutsService {\n  constructor(\n    private mainNavService: MainNavService,\n    private mainBreadcrumbService: MainBreadcrumbService\n  ) { }\n  update(options: ILayoutOptions) {\n    this.mainBreadcrumbService.update(options.resolvers, options.states['main-breadcrumb']);\n    this.mainNavService.update(options.resolvers, options.states['main-nav']);\n  }\n}\n","import { mainBreadcrumbCreateRouterLinkProviders } from './main-breadcrumb-create-router-link.resolver';\nimport { mainNavCreateRouterLinkProviders } from './main-nav-create-router-link.resolver';\nimport { mainNavSelectedItemToBreadcrumbProviders } from './main-nav-selected-item-to-breadcrumb.resolver';\n\nexport * from './main-breadcrumb-create-router-link.resolver';\nexport * from './main-breadcrumb-create-router-link.resolver';\nexport * from './main-nav-create-router-link.resolver';\nexport * from './main-nav-selected-item-to-breadcrumb.resolver';\n\nexport const layoutResolversProviders = [\n    mainBreadcrumbCreateRouterLinkProviders,\n    mainNavCreateRouterLinkProviders,\n    mainNavSelectedItemToBreadcrumbProviders\n];\n","import { Provider } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IMainBreadcrumbResolver, IMainBreadcrumbStateItem, MAIN_BREADCRUMB_RESOLVERS } from '../states/main-breadcrumb.state';\n\nexport class MainBreadcrumbCreateRouterLinkResolver implements IMainBreadcrumbResolver {\n    name = 'main-breadcrumb-create-router-link';\n    constructor(\n        private router: Router\n    ) {\n        this.router.events.pipe(filter(e => e instanceof NavigationEnd)).\n            subscribe(e => {\n                console.log(e);\n            });\n    }\n    items(allowedResolvers: any, options: any, items: IMainBreadcrumbStateItem[]) {\n        console.log(this, options);\n        if (items) {\n            items.forEach((item, index) => {\n                if (!item.parent) {\n                    item.parent = items[index - 1];\n                }\n                /*if (!item.routerLink) {\n                    item.routerLink = items.filter(\n                        (filterItem, filterIndex) => filterIndex <= index\n                    ).map(\n                        mapItem => mapItem.key\n                    );\n                }*/\n            });\n        }\n        return of(items);\n    }\n}\nexport function mainBreadcrumbCreateRouterLinkFactory(\n    router: Router\n) {\n    return new MainBreadcrumbCreateRouterLinkResolver(router);\n}\nexport const mainBreadcrumbCreateRouterLinkProviders: Provider[] = [\n    {\n        provide: MAIN_BREADCRUMB_RESOLVERS,\n        useFactory: mainBreadcrumbCreateRouterLinkFactory,\n        deps: [Router],\n        multi: true\n    }\n];\n","import { Injector, Provider } from '@angular/core';\nimport { of } from 'rxjs';\nimport { IMainNavResolver, IMainNavStateItem, MAIN_NAV_RESOLVERS } from '../states/main-nav.state';\n\nexport class MainNavCreateRouterLinkResolver implements IMainNavResolver {\n    name = 'main-nav-create-router-link';\n    constructor() { }\n    items(allowedResolvers: any, options: any, items: IMainNavStateItem[]) {\n        console.log(this, options);\n        if (items) {\n            items.forEach(parent => {\n                parent.routerLink = [parent.key];\n                if (parent.children) {\n                    parent.children.forEach(item => {\n                        item.parent = parent;\n                        if (!item.routerLink) {\n                            item.routerLink = [parent.key, item.key];\n                        }\n                    });\n                }\n            });\n        }\n        return of(items);\n    }\n}\nexport function mainNavCreateRouterLinkFactory() {\n    return new MainNavCreateRouterLinkResolver();\n}\nexport const mainNavCreateRouterLinkProviders: Provider[] = [\n    {\n        provide: MAIN_NAV_RESOLVERS,\n        useFactory: mainNavCreateRouterLinkFactory,\n        multi: true\n    }\n];\n","import { Provider } from '@angular/core';\nimport { of } from 'rxjs';\nimport { IMainBreadcrumbStateItem, MainBreadcrumbUIStore } from '../states/main-breadcrumb.state';\nimport { IMainNavResolver, IMainNavStateItem, MAIN_NAV_RESOLVERS } from '../states/main-nav.state';\n\nexport class MainNavSelectedItemToBreadcrumbResolver implements IMainNavResolver {\n    name = 'main-nav-selected-item-to-breadcrumb';\n    constructor(\n        private mainBreadcrumbUIStore: MainBreadcrumbUIStore\n    ) {\n    }\n    selectedItem(allowedResolvers: any, options: any, selectedItem: IMainNavStateItem) {\n        console.log(this, options);\n        if (selectedItem && selectedItem.parent) {\n            const breadcrumb: IMainBreadcrumbStateItem[] = [];\n            breadcrumb.push({\n                key: selectedItem.parent.key,\n                caption: selectedItem.parent.caption,\n                // routerLink: selectedItem.parent.routerLink\n            });\n            breadcrumb.push({\n                key: selectedItem.key,\n                caption: selectedItem.caption,\n                // routerLink: selectedItem.routerLink\n            });\n            this.mainBreadcrumbUIStore.update({ items: breadcrumb });\n        }\n        return of(selectedItem);\n    }\n}\nexport function mainNavSelectedItemToBreadcrumbFactory(\n    mainBreadcrumbUIStore: MainBreadcrumbUIStore\n) {\n    return new MainNavSelectedItemToBreadcrumbResolver(mainBreadcrumbUIStore);\n}\nexport const mainNavSelectedItemToBreadcrumbProviders: Provider[] = [\n    {\n        provide: MAIN_NAV_RESOLVERS,\n        useFactory: mainNavSelectedItemToBreadcrumbFactory,\n        deps: [MainBreadcrumbUIStore],\n        multi: true\n    }\n];\n","export * from './main-breadcrumb-data.service';\nexport * from './main-breadcrumb.query';\nexport * from './main-breadcrumb.store';\nexport * from './main-breadcrumb.service';\nexport * from './main-breadcrumb.resolver';\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainBreadcrumbDataService {\n\n  constructor(private http: HttpClient) {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { MainBreadcrumbUIStore, IMainBreadcrumbState } from './main-breadcrumb.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainBreadcrumbUIQuery extends Query<IMainBreadcrumbState> {\n\n  constructor(protected store: MainBreadcrumbUIStore) {\n    super(store);\n  }\n\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\nimport { IMainBreadcrumbStateItem } from './main-breadcrumb.store';\n\nexport interface IMainBreadcrumbResolver {\n  name: string;\n  items?: (allowedResolvers: any, options: any, items: IMainBreadcrumbStateItem[]) => (Observable<IMainBreadcrumbStateItem[]>);\n  selectedItem?: (allowedResolvers: any, options: any, selectedItem: IMainBreadcrumbStateItem) => (Observable<IMainBreadcrumbStateItem>);\n}\n\nexport const MAIN_BREADCRUMB_RESOLVERS = 'MainBreadcrumbResolver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainBreadcrumbResolver {\n  constructor(\n    @Optional() @Inject(MAIN_BREADCRUMB_RESOLVERS) private resolvers: IMainBreadcrumbResolver[]\n  ) { }\n  items(allowedResolvers: any, items: IMainBreadcrumbStateItem[]) {\n    let source = of(items);\n    if (this.resolvers) {\n      Object.keys(allowedResolvers).forEach(key =>\n        this.resolvers.filter(resolver => resolver.items && resolver.name === key).forEach(\n          resolver =>\n            source = source.pipe(\n              concatMap(\n                (val: IMainBreadcrumbStateItem[]) => {\n                  return resolver.items(allowedResolvers, allowedResolvers[key], val);\n                }\n              )\n            )\n        )\n      );\n    }\n    return source;\n  }\n  selectedItem(allowedResolvers: any, item: IMainBreadcrumbStateItem) {\n    let source = of(item);\n    if (this.resolvers) {\n      Object.keys(allowedResolvers).forEach(key =>\n        this.resolvers.filter(resolver => resolver.selectedItem && resolver.name === key).forEach(\n          resolver =>\n            source = source.pipe(\n              concatMap(\n                (val: IMainBreadcrumbStateItem) => {\n                  return resolver.selectedItem(allowedResolvers, allowedResolvers[key], val);\n                }\n              )\n            )\n        )\n      );\n    }\n    return source;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { MainBreadcrumbResolver } from './main-breadcrumb.resolver';\nimport { IMainBreadcrumbState, IMainBreadcrumbStateItem, MainBreadcrumbUIStore } from './main-breadcrumb.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainBreadcrumbService {\n\n  constructor(\n    private uiStore: MainBreadcrumbUIStore,\n    private resolver: MainBreadcrumbResolver\n  ) {\n  }\n  update(resolvers: any, state: IMainBreadcrumbState) {\n    this.updateItems(resolvers, state.items);\n    this.updateSelectedItem(resolvers, state.selectedItem);\n  }\n  updateItems(resolvers: any, items: IMainBreadcrumbStateItem[]) {\n    this.resolver.items(resolvers, items).pipe(first()).subscribe(data =>\n      this.uiStore.update({ items: data, selectedItem: undefined })\n    );\n  }\n  updateSelectedItem(resolvers: any, selectedItem: IMainBreadcrumbStateItem) {\n    this.resolver.selectedItem(resolvers, selectedItem).pipe(first()).subscribe(data =>\n      this.uiStore.update({ selectedItem: data })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Store, StoreConfig } from '@datorama/akita';\n\nexport interface IMainBreadcrumbStateItem {\n  key?: string;\n  caption: string;\n  routerLink?: string[];\n  parent?: IMainBreadcrumbStateItem;\n}\nexport interface IMainBreadcrumbState {\n  items: IMainBreadcrumbStateItem[];\n  selectedItem?: IMainBreadcrumbStateItem;\n}\nexport function createInitialMainBreadcrumbState(): IMainBreadcrumbState {\n  return {\n    items: []\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n@StoreConfig({\n  name: 'main-breadcrumb'\n})\nexport class MainBreadcrumbUIStore extends Store<IMainBreadcrumbState> {\n\n  constructor() {\n    super(createInitialMainBreadcrumbState());\n  }\n\n}\n\n","export * from './main-nav-data.service';\nexport * from './main-nav.query';\nexport * from './main-nav.store';\nexport * from './main-nav.service';\nexport * from './main-nav.resolver';\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainNavDataService {\n\n  constructor(private http: HttpClient) {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { IMainNavState, MainNavUIStore } from './main-nav.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainNavUIQuery extends Query<IMainNavState> {\n\n  constructor(protected store: MainNavUIStore) {\n    super(store);\n  }\n\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\nimport { IMainNavStateItem } from './main-nav.store';\n\nexport interface IMainNavResolver {\n  name: string;\n  items?: (allowedResolvers: any, options: any, items: IMainNavStateItem[]) => (Observable<IMainNavStateItem[]>);\n  selectedItem?: (allowedResolvers: any, options: any, selectedItem: IMainNavStateItem) => (Observable<IMainNavStateItem>);\n  isCollapsed?: (allowedResolvers: any, options: any, value: boolean) => (Observable<boolean>);\n}\n\nexport const MAIN_NAV_RESOLVERS = 'MainNavResolver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainNavResolver {\n\n  constructor(\n    @Optional() @Inject(MAIN_NAV_RESOLVERS) private resolvers: IMainNavResolver[],\n  ) { }\n  items(allowedResolvers: any, items: IMainNavStateItem[]) {\n    let source = of(items);\n    if (this.resolvers) {\n      Object.keys(allowedResolvers).forEach(key =>\n        this.resolvers.filter(resolver => resolver.items && resolver.name === key).forEach(\n          resolver =>\n            source = source.pipe(\n              concatMap(\n                (val: IMainNavStateItem[]) => {\n                  return resolver.items(allowedResolvers, allowedResolvers[key], val);\n                }\n              )\n            )\n        )\n      );\n    }\n    return source;\n  }\n  selectedItem(allowedResolvers: any, item: IMainNavStateItem) {\n    let source = of(item);\n    if (this.resolvers) {\n      Object.keys(allowedResolvers).forEach(key =>\n        this.resolvers.filter(resolver => resolver.selectedItem && resolver.name === key).forEach(\n          resolver =>\n            source = source.pipe(\n              concatMap(\n                (val: IMainNavStateItem) => {\n                  return resolver.selectedItem(allowedResolvers, allowedResolvers[key], val);\n                }\n              )\n            )\n        )\n      );\n    }\n    return source;\n  }\n  isCollapsed(allowedResolvers: any, value: boolean) {\n    let source = of(value);\n    if (this.resolvers) {\n      Object.keys(allowedResolvers).forEach(key =>\n        this.resolvers.filter(resolver => resolver.isCollapsed && resolver.name === key).forEach(\n          resolver =>\n            source = source.pipe(\n              concatMap(\n                (val: boolean) => {\n                  return resolver.isCollapsed(allowedResolvers, allowedResolvers[key], val);\n                }\n              )\n            )\n        )\n      );\n    }\n    return source;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { MainNavResolver } from './main-nav.resolver';\nimport { IMainNavState, IMainNavStateItem, MainNavUIStore } from './main-nav.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainNavService {\n\n  constructor(\n    private uiStore: MainNavUIStore,\n    private resolver: MainNavResolver\n  ) {\n  }\n  update(resolvers: any, state: IMainNavState) {\n    this.updateItems(resolvers, state.items);\n    this.updateSelectedItem(resolvers, state.selectedItem);\n    this.updateIsCollapsed(resolvers, state.isCollapsed);\n  }\n  updateItems(resolvers: any, items: IMainNavStateItem[]) {\n    this.resolver.items(resolvers, items).pipe(first()).subscribe(data =>\n      this.uiStore.update({ items: data, selectedItem: undefined })\n    );\n  }\n  updateSelectedItem(resolvers: any, selectedItem: IMainNavStateItem) {\n    this.resolver.selectedItem(resolvers, selectedItem).pipe(first()).subscribe(data =>\n      this.uiStore.update({ selectedItem: data })\n    );\n  }\n  updateIsCollapsed(resolvers: any, value: boolean) {\n    this.resolver.isCollapsed(resolvers, value).pipe(first()).subscribe(data =>\n      this.uiStore.update({ isCollapsed: data })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Store, StoreConfig } from '@datorama/akita';\n\nexport interface IMainNavStateItem {\n  key: string;\n  icon?: string;\n  caption: string;\n  parent?: IMainNavStateItem;\n  children?: IMainNavStateItem[];\n  routerLink?: string[];\n}\n\nexport interface IMainNavState {\n  theme?: string;\n  isCollapsed?: boolean;\n  selectedItem?: IMainNavStateItem;\n  items: IMainNavStateItem[];\n}\n\nexport function createInitialMainNavState(): IMainNavState {\n  return {\n    theme: 'dark',\n    isCollapsed: false,\n    items: []\n  };\n}\n@Injectable({\n  providedIn: 'root'\n})\n@StoreConfig({\n  name: 'main-nav'\n})\nexport class MainNavUIStore extends Store<IMainNavState> {\n\n  constructor() {\n    super(createInitialMainNavState());\n  }\n\n}\n\n","import { ListPageComponent } from './list-page/list-page.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\n\nexport * from './list-page/list-page.component';\nexport * from './not-found-page/not-found-page.component';\n\nexport type AnyPageComponent = ListPageComponent | NotFoundPageComponent;\n\nexport const pageComponents = [\n    ListPageComponent,\n    NotFoundPageComponent\n];\n","module.exports = \"<ng-container *ngIf=\\\"componentsOptions$|async as componentsOptions\\\">\\n    <ng-container *ngFor=\\\"let componentOptions of componentsOptions; let i = index\\\">\\n        <dynamic-panel\\n            [options]=\\\"componentOptions\\\"\\n            [parent]=\\\"this\\\"\\n            [index]=\\\"i\\\"></dynamic-panel>\\n    </ng-container>\\n</ng-container>\\n\"","import { Component, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { panelComponents } from '../../../panels/components';\nimport { DynamicPanelComponent } from '../../../panels/dynamic-panel/dynamic-panel.component';\nimport { IPanelOptions } from '../../../panels/interfaces/panel-options.interface';\nimport { IPageOptions } from '../../interfaces/page-options.interface';\n\n@Component({\n  selector: 'list-page',\n  templateUrl: './list-page.component.html'\n})\nexport class ListPageComponent implements OnInit {\n  @ViewChildren(DynamicPanelComponent)\n  panels: QueryList<DynamicPanelComponent>;\n  @Input()\n  options: IPageOptions;\n  @Input()\n  activatedRouteSnapshot$: BehaviorSubject<ActivatedRouteSnapshot>;\n  componentsOptions$: Observable<IPanelOptions[]>;\n  static getType() {\n    return 'list-page';\n  }\n  ngOnInit() {\n    console.log(this, this.options);\n    const componentsOptions: IPanelOptions[] = [];\n    if (this.options && this.options.states.panels) {\n      this.options.states.panels.forEach(panel =>\n        panelComponents.forEach(panelComponent => {\n          if (panel.type === panelComponent.getType()) {\n            componentsOptions.push(panel);\n          }\n        })\n      );\n    }\n    if (componentsOptions.length) {\n      this.componentsOptions$ = new Observable(observer => {\n        observer.next(componentsOptions);\n        observer.complete();\n      });\n    }\n  }\n}\n","module.exports = \"<p>\\n  not-found-page works!\\n</p>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { IPageOptions } from '../../interfaces/page-options.interface';\n\n@Component({\n  selector: 'not-found-page',\n  templateUrl: './not-found-page.component.html'\n})\nexport class NotFoundPageComponent implements OnInit {\n  @Input()\n  options: IPageOptions;\n  static getType() {\n    return 'not-found-page';\n  }\n  constructor() { }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"component$|async as component\\\">\\n    <ng-container *ngxComponentOutlet=\\\"component\\\"></ng-container>\\n</ng-container>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { pageComponents } from '../components';\nimport { IPageOptions } from '../interfaces/page-options.interface';\n\n@Component({\n  selector: 'dynamic-page',\n  templateUrl: './dynamic-page.component.html'\n})\nexport class DynamicPageComponent implements OnInit {\n  @Input()\n  options: IPageOptions;\n  @Input()\n  activatedRouteSnapshot$ = new BehaviorSubject<ActivatedRouteSnapshot>(undefined);\n  component$: Observable<any>;\n  constructor(\n    private activatedRoute: ActivatedRoute\n  ) {\n    activatedRoute.queryParams.subscribe(() => {\n      this.activatedRouteSnapshot$.next(this.activatedRoute.snapshot);\n      this.ngOnInit();\n    });\n    activatedRoute.params.subscribe(() => {\n      this.activatedRouteSnapshot$.next(this.activatedRoute.snapshot);\n      this.ngOnInit();\n    });\n    activatedRoute.data.subscribe((data: IPageOptions) => {\n      this.options = data;\n      this.activatedRouteSnapshot$.next(this.activatedRoute.snapshot);\n      this.ngOnInit();\n    });\n  }\n  ngOnInit() {\n    const component = pageComponents.filter(pageComponent =>\n      this.options && pageComponent.getType() === this.options.type\n    )[0];\n    if (component) {\n      this.component$ = new Observable(observer => {\n        observer.next(component);\n        observer.complete();\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NgxdModule } from '@ngxd/core';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { PanelsModule } from '../panels/panels.module';\nimport { pageComponents } from './components';\nimport { DynamicPageComponent } from './dynamic-page/dynamic-page.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot([\n      {\n        path: '**',\n        component: DynamicPageComponent\n      }\n    ]),\n    NgxdModule,\n    NgZorroAntdModule,\n    PanelsModule\n  ],\n  declarations: [\n    ...pageComponents,\n    DynamicPageComponent\n  ],\n  exports: [\n    RouterModule,\n    NgZorroAntdModule,\n    ...pageComponents,\n    DynamicPageComponent\n  ],\n  entryComponents: [\n    ...pageComponents,\n    DynamicPageComponent\n  ]\n})\nexport class PagesModule { }\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { NotFoundPageComponent } from './components';\nimport { DynamicPageComponent } from './dynamic-page/dynamic-page.component';\nimport { IPageOptions } from './interfaces/page-options.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesService {\n  constructor(\n    private router: Router\n  ) { }\n  update(options: IPageOptions[]) {\n    const routes: Route[] = [];\n    options.forEach(pageOptions =>\n      pageOptions.states.routes.forEach(pageRoute =>\n        routes.push({ path: pageRoute, component: DynamicPageComponent, data: pageOptions })\n      )\n    );\n    routes.push({ path: '**', component: NotFoundPageComponent });\n    this.router.resetConfig(routes);\n  }\n}\n","module.exports = \"<form\\n    *ngIf=\\\"options\\\"\\n    [formGroup]=\\\"form\\\"\\n    (ngSubmit)=\\\"onSubmit(this)\\\">\\n    <formly-form\\n        [form]=\\\"form\\\"\\n        [fields]=\\\"fields\\\"\\n        [options]=\\\"formOptions\\\"\\n        [model]=\\\"model\\\">\\n        <button\\n            *ngFor=\\\"let button of buttons; let i = index\\\"\\n            [type]=\\\"button.type\\\"\\n            [ngClass]=\\\"button.class\\\"\\n            (click)=\\\"button.type!=='submit' ? button.onClick(this, buttonRef) : null\\\"\\n            #buttonRef>\\n            {{button.caption}}\\n        </button>\\n    </formly-form>\\n</form>\\n\"","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { AnyPageComponent } from '../../../pages/components';\nimport { IPanelComponent } from '../../interfaces/panel-component.interface';\nimport { IPanelOptions } from '../../interfaces/panel-options.interface';\n\nexport interface IFormPanelButton {\n  caption: string;\n  class?: '';\n  type: 'button' | 'submit';\n  onClick: (panel: IFormPanelComponent, button: IFormPanelButton) => boolean;\n}\nexport interface IFormPanelComponent {\n  parent: AnyPageComponent;\n  options: IPanelOptions;\n  form: FormGroup;\n  model: { [key: string]: any };\n  fields: FormlyFieldConfig[];\n  formOptions?: FormlyFormOptions;\n  buttons?: IFormPanelButton[];\n  submit?: IFormPanelButton;\n  httpClient: HttpClient;\n}\n@Component({\n  selector: 'form-panel',\n  templateUrl: './form-panel.component.html'\n})\nexport class FormPanelComponent implements IPanelComponent, IFormPanelComponent, OnInit {\n  @Input()\n  parent: any;\n  @Input()\n  options: IPanelOptions;\n  form = new FormGroup({});\n  model = {};\n  fields: FormlyFieldConfig[] = [];\n  formOptions?: FormlyFormOptions;\n  buttons: IFormPanelButton[] = [];\n  submit: IFormPanelButton;\n  static getType() {\n    return 'form-panel';\n  }\n  constructor(\n    public httpClient: HttpClient\n  ) { }\n  ngOnInit() {\n    const states = (this.options.states as IFormPanelComponent);\n    this.model = states.model;\n    this.fields = states.fields;\n    this.formOptions = states.formOptions;\n    this.buttons = states.buttons;\n    this.submit = states.submit;\n    if (this.options.resolvers.init) {\n      this.options.resolvers.init(this);\n    }\n    console.log(states);\n  }\n  onSubmit(panel: IFormPanelComponent, button: IFormPanelButton) {\n    if (this.submit) {\n      this.submit.onClick(panel, button);\n    } else {\n      if (this.buttons && this.buttons[0]) {\n        this.buttons[0].onClick(panel, button);\n      }\n    }\n    return true;\n  }\n}\n","module.exports = \"<ag-grid-angular\\n    style=\\\"width: 500px; height: 500px;\\\"\\n    [ngClass]=\\\"theme\\\"\\n    [gridOptions]=\\\"gridOptions\\\"\\n    #gridRef></ag-grid-angular>\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { IPanelComponent } from '../../interfaces/panel-component.interface';\nimport { IPanelOptions } from '../../interfaces/panel-options.interface';\nimport { AnyPageComponent } from '../../../pages/components';\nimport { Observable } from 'rxjs';\nimport { GridOptions } from 'ag-grid-community';\nimport { HttpClient } from '@angular/common/http';\nimport { AgGridNg2 } from 'ag-grid-angular';\n\nexport interface IGridPanelComponent {\n  theme: string;\n  style: string;\n  parent: AnyPageComponent;\n  options: IPanelOptions;\n  gridOptions: GridOptions;\n  gridRef?: AgGridNg2;\n  httpClient?: HttpClient;\n}\n@Component({\n  selector: 'grid-panel',\n  templateUrl: './grid-panel.component.html'\n})\nexport class GridPanelComponent implements IPanelComponent, IGridPanelComponent, OnInit {\n  @ViewChild('gridRef')\n  gridRef: AgGridNg2;\n  @Input()\n  theme: string;\n  @Input()\n  style: string;\n  @Input()\n  parent: any;\n  @Input()\n  options: IPanelOptions;\n  @Input()\n  gridOptions: GridOptions;\n  static getType() {\n    return 'grid-panel';\n  }\n  constructor(\n    public httpClient: HttpClient\n  ) { }\n  ngOnInit() {\n    const states = (this.options.states as IGridPanelComponent);\n    this.style = states.style;\n    this.theme = states.theme;\n    this.gridOptions = states.gridOptions;\n    if (this.options.resolvers.init) {\n      this.options.resolvers.init(this);\n    }\n    console.log(this.gridRef, states);\n  }\n}\n","import { FormPanelComponent, IFormPanelComponent } from './form-panel/form-panel.component';\nimport { GridPanelComponent, IGridPanelComponent } from './grid-panel/grid-panel.component';\n\nexport * from './form-panel/form-panel.component';\nexport * from './grid-panel/grid-panel.component';\n\nexport type IAnyPanelComponent = IFormPanelComponent | IGridPanelComponent;\n\nexport const panelComponents = [\n    FormPanelComponent,\n    GridPanelComponent\n];\n","module.exports = \"<ng-container *ngIf=\\\"component$|async as component\\\">\\n    <ng-container *ngxComponentOutlet=\\\"component\\\">\\n        <ng-container *ngTemplateOutlet=\\\"contentRef\\\"></ng-container>\\n    </ng-container>\\n</ng-container>\\n\"","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { panelComponents } from '../components';\nimport { IPanelOptions } from '../interfaces/panel-options.interface';\n\n@Component({\n  selector: 'dynamic-panel',\n  templateUrl: './dynamic-panel.component.html'\n})\nexport class DynamicPanelComponent implements OnInit {\n  @Input()\n  contentRef: TemplateRef<any>;\n  @Input()\n  parent: any;\n  @Input()\n  options: IPanelOptions;\n  @Input()\n  index: number;\n  component$: Observable<any>;\n  ngOnInit() {\n    const component = panelComponents.filter(panelComponent =>\n      this.options && panelComponent.getType() === this.options.type\n    )[0];\n    if (component) {\n      this.component$ = new Observable(observer => {\n        observer.next(component);\n        observer.complete();\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { NgxdModule } from '@ngxd/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { panelComponents } from './components';\nimport { DynamicPanelComponent } from './dynamic-panel/dynamic-panel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxdModule,\n    NgZorroAntdModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot(),\n    AgGridModule.withComponents([]),\n    FormlyBootstrapModule\n  ],\n  declarations: [\n    ...panelComponents,\n    DynamicPanelComponent\n  ],\n  exports: [\n    NgZorroAntdModule,\n    ...panelComponents,\n    DynamicPanelComponent\n  ],\n  entryComponents: [\n    ...panelComponents,\n    DynamicPanelComponent\n  ]\n})\nexport class PanelsModule { }\n","import { AgGridNg2 } from 'ag-grid-angular';\nimport { map } from 'rxjs/operators';\nimport { ListPageComponent } from '../app/pages/components';\nimport { IFormPanelButton, IFormPanelComponent, IGridPanelComponent } from '../app/panels/components';\nimport { IEnvironment } from './environment.interface';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: IEnvironment = {\n  app: {\n    layout: {\n      type: 'sidenav-layout',\n      resolvers: {\n        'main-nav-create-router-link': { a: 1 },\n        'main-breadcrumb-create-router-link': { a: 2 },\n        'main-nav-selected-item-to-breadcrumb': { a: 3 }\n      },\n      states: {\n        'main-breadcrumb': {\n          items: []\n        },\n        'main-nav': {\n          items: [\n            {\n              key: '',\n              icon: 'anticon anticon-table',\n              caption: 'Entities',\n              children: [\n                {\n                  key: 'groups',\n                  caption: 'Groups'\n                },\n                {\n                  key: 'users',\n                  caption: 'Users'\n                }\n              ]\n            }, {\n              key: 'auth',\n              icon: 'anticon anticon-user',\n              caption: 'Auth',\n              children: [\n                {\n                  key: 'login',\n                  caption: 'Login'\n                },\n                {\n                  key: 'logout',\n                  caption: 'Logout'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    pages: [\n      {\n        type: 'list-page',\n        resolvers: {\n          'resolver': 'resolver-options'\n        },\n        states: {\n          'routes': [\n            'auth',\n            'auth/:name'\n          ],\n          'panels': [\n            {\n              type: 'form-panel',\n              resolvers: {\n                'init': (panel: IFormPanelComponent) => {\n                  const parent = panel.parent as ListPageComponent;\n                  parent.activatedRouteSnapshot$.subscribe(\n                    activatedRouteSnapshot => {\n                      const name = activatedRouteSnapshot.params['name'];\n                      if (name === 'logout') {\n                        panel.model = {};\n                        panel.fields = [];\n                        panel.buttons[0].caption = 'Logout';\n                      } else {\n                        panel.model = { username: '', password: '' };\n                        panel.fields = panel.options.states.fields;\n                        panel.buttons[0].caption = 'Login';\n                      }\n                      console.log(panel, activatedRouteSnapshot);\n                    }\n                  );\n                }\n              },\n              states: {\n                model: { username: '' },\n                fields: [{\n                  key: 'username',\n                  type: 'input',\n                  templateOptions: {\n                    type: 'text',\n                    label: 'Username',\n                    placeholder: 'Enter username',\n                    required: true,\n                  }\n                }, {\n                  key: 'password',\n                  type: 'input',\n                  templateOptions: {\n                    type: 'password',\n                    label: 'Password',\n                    placeholder: 'Enter password',\n                    required: true,\n                  }\n                }],\n                buttons: [\n                  {\n                    caption: 'Submit',\n                    type: 'submit',\n                    onClick: (panel: IFormPanelComponent, button: IFormPanelButton) => {\n                      if (panel.buttons[0].caption === 'Logout') {\n                        alert('Bye-Bye!');\n                      } else {\n                        if (panel.form.valid) {\n                          alert(JSON.stringify(panel.model));\n                        } else {\n                          alert('Data in form is not valid!');\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      {\n        type: 'list-page',\n        resolvers: {\n          'resolver': 'resolver-options'\n        },\n        states: {\n          'routes': [\n            'groups',\n            'groups/:name'\n          ],\n          'panels': [\n            {\n              type: 'form-panel',\n              resolvers: {\n                'init': (panel: IFormPanelComponent) => {\n                  const parent = panel.parent as ListPageComponent;\n                  parent.activatedRouteSnapshot$.subscribe(\n                    activatedRouteSnapshot => {\n                      const name = activatedRouteSnapshot.params['name'];\n                      panel.model = { name: name };\n                      if (name) {\n                        panel.buttons[0].caption = 'Save';\n                      } else {\n                        panel.buttons[0].caption = 'Create';\n                      }\n                      console.log(panel);\n                    }\n                  );\n                }\n              },\n              states: {\n                model: { name: '' },\n                fields: [{\n                  key: 'name',\n                  type: 'input',\n                  templateOptions: {\n                    type: 'text',\n                    label: 'Name',\n                    placeholder: 'Enter name',\n                    required: true,\n                  }\n                }],\n                buttons: [\n                  {\n                    caption: 'Save',\n                    type: 'submit',\n                    onClick: (panel: IFormPanelComponent, button: IFormPanelButton) => {\n                      const parent = panel.parent as ListPageComponent;\n                      const grid = parent.options.resolvers.grid as AgGridNg2;\n                      console.log(panel);\n                      if (panel.form.valid) {\n                        if (panel.buttons[0].caption === 'Create') {\n                          grid.api.addItems([\n                            panel.model\n                          ]);\n                          panel.model = {};\n                        }\n                      } else {\n                        alert('Data in form is not valid!');\n                      }\n                    }\n                  }\n                ]\n              }\n            },\n            {\n              type: 'grid-panel',\n              resolvers: {\n                'init': (panel: IGridPanelComponent) => {\n                  const parent = panel.parent as ListPageComponent;\n                  parent.options.resolvers.grid = panel.gridRef;\n                  parent.activatedRouteSnapshot$.subscribe(\n                    activatedRouteSnapshot => {\n                      console.log(panel, activatedRouteSnapshot.params);\n                    }\n                  );\n                  panel.httpClient.get('http://598726293223df0011bbead7.mockapi.io/api/groups').pipe(\n                    map(data => data['groups'])\n                  ).subscribe(data => {\n                    panel.gridRef.api.setRowData(data);\n                    console.log(panel);\n                  });\n                }\n              },\n              states: {\n                theme: 'ag-theme-balham',\n                style: 'width: 500px; height: 500px;',\n                gridOptions: {\n                  columnDefs: [\n                    { headerName: 'Name', field: 'name' }\n                  ],\n                  rowData: []\n                }\n              }\n            }\n          ]\n        }\n      }, {\n        type: 'list-page',\n        resolvers: {\n          'resolver': 'resolver-options'\n        },\n        states: {\n          'routes': [\n            'users',\n            'users/:username'\n          ],\n          'panels': [\n            {\n              type: 'grid-panel',\n              resolvers: {\n                'init': (panel: IGridPanelComponent) => {\n                  const parent = panel.parent as ListPageComponent;\n                  parent.activatedRouteSnapshot$.subscribe(\n                    activatedRouteSnapshot => {\n                      console.log(panel, activatedRouteSnapshot.params);\n                    }\n                  );\n                  panel.httpClient.get('http://598726293223df0011bbead7.mockapi.io/api/users').pipe(\n                    map(data => data['users'])\n                  ).subscribe(data => {\n                    panel.gridRef.api.setRowData(data);\n                    console.log(panel);\n                  });\n                }\n              },\n              states: {\n                theme: 'ag-theme-balham',\n                style: 'width: 500px; height: 500px;',\n                gridOptions: {\n                  columnDefs: [\n                    { headerName: 'Username', field: 'username' },\n                    { headerName: 'Email', field: 'email' }\n                  ],\n                  rowData: []\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  },\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}